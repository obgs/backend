package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
	"github.com/open-boardgame-stats/backend/internal/ent"
	"github.com/open-boardgame-stats/backend/internal/graphql/model"
)

// Metrics is the resolver for the metrics field.
func (r *gameVersionResolver) Metrics(ctx context.Context, obj *ent.GameVersion) (*model.GameVersionMetrics, error) {
	fields := graphql.CollectAllFields(ctx)
	var numericStats []*model.NumericMetric
	var enumStats []*model.EnumMetric
	for _, field := range fields {
		switch field {
		case "numericStats":
			{
				resp, err := getNumericStats(ctx, r.client, obj)
				if err != nil {
					return nil, err
				}
				numericStats = resp
			}
		case "enumStats":
			{
				resp, err := getEnumStats(ctx, r.client, obj)
				if err != nil {
					return nil, err
				}
				enumStats = resp
			}
		}
	}
	return &model.GameVersionMetrics{
		NumericStats: numericStats,
		EnumStats:    enumStats,
	}, nil
}
