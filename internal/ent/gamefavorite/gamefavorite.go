// Code generated by ent, DO NOT EDIT.

package gamefavorite

import (
	"github.com/open-boardgame-stats/backend/internal/ent/schema/guidgql"
)

const (
	// Label holds the string label denoting the gamefavorite type in the database.
	Label = "game_favorite"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeGame holds the string denoting the game edge name in mutations.
	EdgeGame = "game"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the gamefavorite in the database.
	Table = "game_favorites"
	// GameTable is the table that holds the game relation/edge.
	GameTable = "game_favorites"
	// GameInverseTable is the table name for the Game entity.
	// It exists in this package in order to avoid circular dependency with the "game" package.
	GameInverseTable = "games"
	// GameColumn is the table column denoting the game relation/edge.
	GameColumn = "game_favorites"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "game_favorites"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_favorite_games"
)

// Columns holds all SQL columns for gamefavorite fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "game_favorites"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"game_favorites",
	"user_favorite_games",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() guidgql.GUID
)
