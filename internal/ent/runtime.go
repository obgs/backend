// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/open-boardgame-stats/backend/internal/ent/group"
	"github.com/open-boardgame-stats/backend/internal/ent/groupmembership"
	"github.com/open-boardgame-stats/backend/internal/ent/groupmembershipapplication"
	"github.com/open-boardgame-stats/backend/internal/ent/groupsettings"
	"github.com/open-boardgame-stats/backend/internal/ent/player"
	"github.com/open-boardgame-stats/backend/internal/ent/playersupervisionrequest"
	"github.com/open-boardgame-stats/backend/internal/ent/playersupervisionrequestapproval"
	"github.com/open-boardgame-stats/backend/internal/ent/schema"
	"github.com/open-boardgame-stats/backend/internal/ent/schema/guidgql"
	"github.com/open-boardgame-stats/backend/internal/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[1].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescDescription is the schema descriptor for description field.
	groupDescDescription := groupFields[2].Descriptor()
	// group.DefaultDescription holds the default value on creation for the description field.
	group.DefaultDescription = groupDescDescription.Default.(string)
	// groupDescLogoURL is the schema descriptor for logo_url field.
	groupDescLogoURL := groupFields[3].Descriptor()
	// group.LogoURLValidator is a validator for the "logo_url" field. It is called by the builders before save.
	group.LogoURLValidator = groupDescLogoURL.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupFields[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() guidgql.GUID)
	groupmembershipFields := schema.GroupMembership{}.Fields()
	_ = groupmembershipFields
	// groupmembershipDescID is the schema descriptor for id field.
	groupmembershipDescID := groupmembershipFields[0].Descriptor()
	// groupmembership.DefaultID holds the default value on creation for the id field.
	groupmembership.DefaultID = groupmembershipDescID.Default.(func() guidgql.GUID)
	groupmembershipapplicationFields := schema.GroupMembershipApplication{}.Fields()
	_ = groupmembershipapplicationFields
	// groupmembershipapplicationDescMessage is the schema descriptor for message field.
	groupmembershipapplicationDescMessage := groupmembershipapplicationFields[1].Descriptor()
	// groupmembershipapplication.DefaultMessage holds the default value on creation for the message field.
	groupmembershipapplication.DefaultMessage = groupmembershipapplicationDescMessage.Default.(string)
	// groupmembershipapplicationDescID is the schema descriptor for id field.
	groupmembershipapplicationDescID := groupmembershipapplicationFields[0].Descriptor()
	// groupmembershipapplication.DefaultID holds the default value on creation for the id field.
	groupmembershipapplication.DefaultID = groupmembershipapplicationDescID.Default.(func() guidgql.GUID)
	groupsettingsFields := schema.GroupSettings{}.Fields()
	_ = groupsettingsFields
	// groupsettingsDescID is the schema descriptor for id field.
	groupsettingsDescID := groupsettingsFields[0].Descriptor()
	// groupsettings.DefaultID holds the default value on creation for the id field.
	groupsettings.DefaultID = groupsettingsDescID.Default.(func() guidgql.GUID)
	playerFields := schema.Player{}.Fields()
	_ = playerFields
	// playerDescName is the schema descriptor for name field.
	playerDescName := playerFields[1].Descriptor()
	// player.DefaultName holds the default value on creation for the name field.
	player.DefaultName = playerDescName.Default.(string)
	// playerDescID is the schema descriptor for id field.
	playerDescID := playerFields[0].Descriptor()
	// player.DefaultID holds the default value on creation for the id field.
	player.DefaultID = playerDescID.Default.(func() guidgql.GUID)
	playersupervisionrequestFields := schema.PlayerSupervisionRequest{}.Fields()
	_ = playersupervisionrequestFields
	// playersupervisionrequestDescID is the schema descriptor for id field.
	playersupervisionrequestDescID := playersupervisionrequestFields[0].Descriptor()
	// playersupervisionrequest.DefaultID holds the default value on creation for the id field.
	playersupervisionrequest.DefaultID = playersupervisionrequestDescID.Default.(func() guidgql.GUID)
	playersupervisionrequestapprovalFields := schema.PlayerSupervisionRequestApproval{}.Fields()
	_ = playersupervisionrequestapprovalFields
	// playersupervisionrequestapprovalDescID is the schema descriptor for id field.
	playersupervisionrequestapprovalDescID := playersupervisionrequestapprovalFields[0].Descriptor()
	// playersupervisionrequestapproval.DefaultID holds the default value on creation for the id field.
	playersupervisionrequestapproval.DefaultID = playersupervisionrequestapprovalDescID.Default.(func() guidgql.GUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescAvatarURL is the schema descriptor for avatar_url field.
	userDescAvatarURL := userFields[4].Descriptor()
	// user.DefaultAvatarURL holds the default value on creation for the avatar_url field.
	user.DefaultAvatarURL = userDescAvatarURL.Default.(string)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() guidgql.GUID)
}
